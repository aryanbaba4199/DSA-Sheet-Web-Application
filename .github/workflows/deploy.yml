name: CI/CD for MERN Stack on Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      CLOUD_RUN_BACKEND_SERVICE_NAME: ${{ secrets.CLOUD_RUN_BACKEND_SERVICE_NAME }}
      CLOUD_RUN_FRONTEND_SERVICE_NAME: ${{ secrets.CLOUD_RUN_FRONTEND_SERVICE_NAME }}
      GCP_ARTIFACT_REGISTRY_REPO: ${{ secrets.GCP_ARTIFACT_REGISTRY_REPO }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: üîë Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: ‚òÅÔ∏è Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: üê≥ Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker asia-south1-docker.pkg.dev

      # --- Backend Deployment ---
      - name: üì¶ Install backend dependencies
        working-directory: backend
        run: npm install

      - name: üê≥ Build and Push Backend Docker Image
        run: |
          docker build -f backend/Dockerfile \
            -t asia-south1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.CLOUD_RUN_BACKEND_SERVICE_NAME }}:${{ github.sha }} \
            ./backend

          docker push asia-south1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.CLOUD_RUN_BACKEND_SERVICE_NAME }}:${{ github.sha }}

      - name: üöÄ Deploy Backend to Cloud Run
        run: |
          gcloud run deploy ${{ env.CLOUD_RUN_BACKEND_SERVICE_NAME }} \
            --image asia-south1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.CLOUD_RUN_BACKEND_SERVICE_NAME }}:${{ github.sha }} \
            --region asia-south1 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "MONGODB_URI=${{ secrets.MONGODB_URI }},JWT_KEY=${{ secrets.JWT_SECRET }}"

      # --- Frontend Deployment ---
      - name: üì¶ Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: ‚öôÔ∏è Build frontend
        working-directory: frontend
        run: npm run build

      - name: üê≥ Build and Push Frontend Docker Image
        run: |
          docker build -f frontend/Dockerfile \
            -t asia-south1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.CLOUD_RUN_FRONTEND_SERVICE_NAME }}:${{ github.sha }} \
            ./frontend

          docker push asia-south1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.CLOUD_RUN_FRONTEND_SERVICE_NAME }}:${{ github.sha }}

      - name: üöÄ Deploy Frontend to Cloud Run
        run: |
          gcloud run deploy ${{ env.CLOUD_RUN_FRONTEND_SERVICE_NAME }} \
            --image asia-south1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.CLOUD_RUN_FRONTEND_SERVICE_NAME }}:${{ github.sha }} \
            --region asia-south1 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "VITE_APP_CLOUD_NAME_CLOUDINARY=${{ secrets.VITE_APP_CLOUD_NAME_CLOUDINARY }}"
